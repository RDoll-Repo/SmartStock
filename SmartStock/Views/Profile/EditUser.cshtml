@model SmartStock.Models.TUser


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="center-up">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.intUserID)
    <form action="editUser">
        <table>
            <tr>
                <td colspan="2" style="text-align: center;">
                    <h1>Edit User</h1>
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.strFirstName, "First Name")
                </td>
                <td>
                    @Html.EditorFor(model => model.strFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strFirstName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.strLastName, "Last Name")
                </td>
                <td colspan="2">
                    @Html.EditorFor(model => model.strLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strLastName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.strPhoneNumber, "Phone Number")
                </td>
                <td colspan="2">
                    @Html.EditorFor(model => model.strPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strPhoneNumber, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.strEmail, "Email")
                </td>
                <td colspan="2">
                    @Html.EditorFor(model => model.strEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strEmail, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.strUserName, "Username")
                </td>
                <td colspan="2">
                    @Html.EditorFor(model => model.strUserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strUserName, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.userPassword, "Password")
                </td>
                <td colspan="2">
                    @Html.EditorFor(model => model.userPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userPassword, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="table-label">
                    @Html.LabelFor(model => model.intRoleID, "Role")
                </td>
                <td colspan="2">
                    @Html.DropDownList("rolename", "Select a Role")
                    @Html.ValidationMessageFor(model => model.intRoleID, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: center;">
                    <button id="btnBack" name="btnCancel" value="back" class="button-action"><i class="fa-solid fa-arrow-left"></i> Back</button>
                    <button id="btnEditUser" name="btnSubmit" value="editSubmit" class="button-action"><i class="fas fa-user-plus"></i> Submit </button>
                </td>
            </tr>
        </table>
    </form>
</div>
}

